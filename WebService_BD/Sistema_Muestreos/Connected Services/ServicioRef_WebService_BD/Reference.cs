//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sistema_Muestreos.ServicioRef_WebService_BD {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioRef_WebService_BD.WS_Base_DatosSoap")]
    public interface WS_Base_DatosSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerificarCredenciales", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet VerificarCredenciales(string pNombreUsuario, string pContrasenia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerificarCredenciales", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> VerificarCredencialesAsync(string pNombreUsuario, string pContrasenia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegistrarNuevoUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet RegistrarNuevoUsuario(string pNombre, string pApellidos, string pCorreoElectronico, string pNombreUsuario, string pContrasenia, int pIdTipoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegistrarNuevoUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> RegistrarNuevoUsuarioAsync(string pNombre, string pApellidos, string pCorreoElectronico, string pNombreUsuario, string pContrasenia, int pIdTipoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerActividades", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerActividades();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerActividades", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerActividadesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearActividad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CrearActividad(string pNombreActividad, int pTipoActividad, string pDescripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearActividad", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CrearActividadAsync(string pNombreActividad, int pTipoActividad, string pDescripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModificarActividad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ModificarActividad(string pNombreOriginal, string pNombre, string pDescripcion, int pTipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModificarActividad", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ModificarActividadAsync(string pNombreOriginal, string pNombre, string pDescripcion, int pTipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarActividad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet EliminarActividad(string pNombreActividad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarActividad", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> EliminarActividadAsync(string pNombreActividad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerActividad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerActividad(string pNombreActividad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerActividad", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerActividadAsync(string pNombreActividad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarColaborador", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet InsertarColaborador(string identificador, string salario, int puesto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarColaborador", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> InsertarColaboradorAsync(string identificador, string salario, int puesto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarColaborador", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet EliminarColaborador(string colaborador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarColaborador", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> EliminarColaboradorAsync(string colaborador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarPuestos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarPuestos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarPuestos", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarPuestosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarColaboradores", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarColaboradores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarColaboradores", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarColaboradoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerMuestreoPreliminarId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerMuestreoPreliminarId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerMuestreoPreliminarId", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerMuestreoPreliminarIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegistrarRevisionColaborador", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet RegistrarRevisionColaborador(int pIdMP, string IdColaborador, int pIdAtividad, string pUsuarioRegistrador, string pDescripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegistrarRevisionColaborador", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> RegistrarRevisionColaboradorAsync(int pIdMP, string IdColaborador, int pIdAtividad, string pUsuarioRegistrador, string pDescripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarContrasenia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ActualizarContrasenia(string usuario, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarContrasenia", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ActualizarContraseniaAsync(string usuario, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearMuestreoPreliminar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CrearMuestreoPreliminar(string idMuestreo, string fechahora, string temperatura, string humedad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearMuestreoPreliminar", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CrearMuestreoPreliminarAsync(string idMuestreo, string fechahora, string temperatura, string humedad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarHorasNoLaborables", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet InsertarHorasNoLaborables(string idmuestreo, string horaDescanso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarHorasNoLaborables", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> InsertarHorasNoLaborablesAsync(string idmuestreo, string horaDescanso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarHorasNoLaborables", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarHorasNoLaborables();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarHorasNoLaborables", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarHorasNoLaborablesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BorrarHorasNoLaborables", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BorrarHorasNoLaborables(int idHora);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BorrarHorasNoLaborables", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BorrarHorasNoLaborablesAsync(int idHora);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearMuestreo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CrearMuestreo(string fechaHoraInicio, int lapsoRandomInicio, int lapsoRandomFinal, string descripcion, string adm, string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearMuestreo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CrearMuestreoAsync(string fechaHoraInicio, int lapsoRandomInicio, int lapsoRandomFinal, string descripcion, string adm, string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinalizarMuestreo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FinalizarMuestreo(string idMuestreo, string fechaHoraFinal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinalizarMuestreo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> FinalizarMuestreoAsync(string idMuestreo, string fechaHoraFinal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarMuestreo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet EliminarMuestreo(string idMuestreo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarMuestreo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> EliminarMuestreoAsync(string idMuestreo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarUltimoMuestreo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarUltimoMuestreo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarUltimoMuestreo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarUltimoMuestreoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarIdHoraNoLaboral", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarIdHoraNoLaboral(string horaInicio, string horaFinal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarIdHoraNoLaboral", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarIdHoraNoLaboralAsync(string horaInicio, string horaFinal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AniadirHoraNoLaboral", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AniadirHoraNoLaboral(int IdMuestreo, string horaInicio, string horaFinal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AniadirHoraNoLaboral", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AniadirHoraNoLaboralAsync(int IdMuestreo, string horaInicio, string horaFinal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModificarMuestreoPreliminar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ModificarMuestreoPreliminar(string IDMP, string temperatura, string humedad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModificarMuestreoPreliminar", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ModificarMuestreoPreliminarAsync(string IDMP, string temperatura, string humedad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarMuestreoPreliminar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet EliminarMuestreoPreliminar(string idMuestreo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarMuestreoPreliminar", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> EliminarMuestreoPreliminarAsync(string idMuestreo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarUltimoMuestreoPreliminar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarUltimoMuestreoPreliminar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarUltimoMuestreoPreliminar", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarUltimoMuestreoPreliminarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModificarMuestreoPreliminarHoras", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ModificarMuestreoPreliminarHoras(string IDMP, string fechahora);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModificarMuestreoPreliminarHoras", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ModificarMuestreoPreliminarHorasAsync(string IDMP, string fechahora);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WS_Base_DatosSoapChannel : Sistema_Muestreos.ServicioRef_WebService_BD.WS_Base_DatosSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WS_Base_DatosSoapClient : System.ServiceModel.ClientBase<Sistema_Muestreos.ServicioRef_WebService_BD.WS_Base_DatosSoap>, Sistema_Muestreos.ServicioRef_WebService_BD.WS_Base_DatosSoap {
        
        public WS_Base_DatosSoapClient() {
        }
        
        public WS_Base_DatosSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WS_Base_DatosSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WS_Base_DatosSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WS_Base_DatosSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet VerificarCredenciales(string pNombreUsuario, string pContrasenia) {
            return base.Channel.VerificarCredenciales(pNombreUsuario, pContrasenia);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> VerificarCredencialesAsync(string pNombreUsuario, string pContrasenia) {
            return base.Channel.VerificarCredencialesAsync(pNombreUsuario, pContrasenia);
        }
        
        public System.Data.DataSet RegistrarNuevoUsuario(string pNombre, string pApellidos, string pCorreoElectronico, string pNombreUsuario, string pContrasenia, int pIdTipoUsuario) {
            return base.Channel.RegistrarNuevoUsuario(pNombre, pApellidos, pCorreoElectronico, pNombreUsuario, pContrasenia, pIdTipoUsuario);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> RegistrarNuevoUsuarioAsync(string pNombre, string pApellidos, string pCorreoElectronico, string pNombreUsuario, string pContrasenia, int pIdTipoUsuario) {
            return base.Channel.RegistrarNuevoUsuarioAsync(pNombre, pApellidos, pCorreoElectronico, pNombreUsuario, pContrasenia, pIdTipoUsuario);
        }
        
        public System.Data.DataSet ObtenerActividades() {
            return base.Channel.ObtenerActividades();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerActividadesAsync() {
            return base.Channel.ObtenerActividadesAsync();
        }
        
        public System.Data.DataSet CrearActividad(string pNombreActividad, int pTipoActividad, string pDescripcion) {
            return base.Channel.CrearActividad(pNombreActividad, pTipoActividad, pDescripcion);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CrearActividadAsync(string pNombreActividad, int pTipoActividad, string pDescripcion) {
            return base.Channel.CrearActividadAsync(pNombreActividad, pTipoActividad, pDescripcion);
        }
        
        public System.Data.DataSet ModificarActividad(string pNombreOriginal, string pNombre, string pDescripcion, int pTipo) {
            return base.Channel.ModificarActividad(pNombreOriginal, pNombre, pDescripcion, pTipo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ModificarActividadAsync(string pNombreOriginal, string pNombre, string pDescripcion, int pTipo) {
            return base.Channel.ModificarActividadAsync(pNombreOriginal, pNombre, pDescripcion, pTipo);
        }
        
        public System.Data.DataSet EliminarActividad(string pNombreActividad) {
            return base.Channel.EliminarActividad(pNombreActividad);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> EliminarActividadAsync(string pNombreActividad) {
            return base.Channel.EliminarActividadAsync(pNombreActividad);
        }
        
        public System.Data.DataSet ObtenerActividad(string pNombreActividad) {
            return base.Channel.ObtenerActividad(pNombreActividad);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerActividadAsync(string pNombreActividad) {
            return base.Channel.ObtenerActividadAsync(pNombreActividad);
        }
        
        public System.Data.DataSet InsertarColaborador(string identificador, string salario, int puesto) {
            return base.Channel.InsertarColaborador(identificador, salario, puesto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> InsertarColaboradorAsync(string identificador, string salario, int puesto) {
            return base.Channel.InsertarColaboradorAsync(identificador, salario, puesto);
        }
        
        public System.Data.DataSet EliminarColaborador(string colaborador) {
            return base.Channel.EliminarColaborador(colaborador);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> EliminarColaboradorAsync(string colaborador) {
            return base.Channel.EliminarColaboradorAsync(colaborador);
        }
        
        public System.Data.DataSet BuscarPuestos() {
            return base.Channel.BuscarPuestos();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarPuestosAsync() {
            return base.Channel.BuscarPuestosAsync();
        }
        
        public System.Data.DataSet BuscarColaboradores() {
            return base.Channel.BuscarColaboradores();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarColaboradoresAsync() {
            return base.Channel.BuscarColaboradoresAsync();
        }
        
        public System.Data.DataSet ObtenerMuestreoPreliminarId() {
            return base.Channel.ObtenerMuestreoPreliminarId();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerMuestreoPreliminarIdAsync() {
            return base.Channel.ObtenerMuestreoPreliminarIdAsync();
        }
        
        public System.Data.DataSet RegistrarRevisionColaborador(int pIdMP, string IdColaborador, int pIdAtividad, string pUsuarioRegistrador, string pDescripcion) {
            return base.Channel.RegistrarRevisionColaborador(pIdMP, IdColaborador, pIdAtividad, pUsuarioRegistrador, pDescripcion);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> RegistrarRevisionColaboradorAsync(int pIdMP, string IdColaborador, int pIdAtividad, string pUsuarioRegistrador, string pDescripcion) {
            return base.Channel.RegistrarRevisionColaboradorAsync(pIdMP, IdColaborador, pIdAtividad, pUsuarioRegistrador, pDescripcion);
        }
        
        public System.Data.DataSet ActualizarContrasenia(string usuario, string contraseña) {
            return base.Channel.ActualizarContrasenia(usuario, contraseña);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ActualizarContraseniaAsync(string usuario, string contraseña) {
            return base.Channel.ActualizarContraseniaAsync(usuario, contraseña);
        }
        
        public System.Data.DataSet CrearMuestreoPreliminar(string idMuestreo, string fechahora, string temperatura, string humedad) {
            return base.Channel.CrearMuestreoPreliminar(idMuestreo, fechahora, temperatura, humedad);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CrearMuestreoPreliminarAsync(string idMuestreo, string fechahora, string temperatura, string humedad) {
            return base.Channel.CrearMuestreoPreliminarAsync(idMuestreo, fechahora, temperatura, humedad);
        }
        
        public System.Data.DataSet InsertarHorasNoLaborables(string idmuestreo, string horaDescanso) {
            return base.Channel.InsertarHorasNoLaborables(idmuestreo, horaDescanso);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> InsertarHorasNoLaborablesAsync(string idmuestreo, string horaDescanso) {
            return base.Channel.InsertarHorasNoLaborablesAsync(idmuestreo, horaDescanso);
        }
        
        public System.Data.DataSet BuscarHorasNoLaborables() {
            return base.Channel.BuscarHorasNoLaborables();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarHorasNoLaborablesAsync() {
            return base.Channel.BuscarHorasNoLaborablesAsync();
        }
        
        public System.Data.DataSet BorrarHorasNoLaborables(int idHora) {
            return base.Channel.BorrarHorasNoLaborables(idHora);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BorrarHorasNoLaborablesAsync(int idHora) {
            return base.Channel.BorrarHorasNoLaborablesAsync(idHora);
        }
        
        public System.Data.DataSet CrearMuestreo(string fechaHoraInicio, int lapsoRandomInicio, int lapsoRandomFinal, string descripcion, string adm, string nombre) {
            return base.Channel.CrearMuestreo(fechaHoraInicio, lapsoRandomInicio, lapsoRandomFinal, descripcion, adm, nombre);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CrearMuestreoAsync(string fechaHoraInicio, int lapsoRandomInicio, int lapsoRandomFinal, string descripcion, string adm, string nombre) {
            return base.Channel.CrearMuestreoAsync(fechaHoraInicio, lapsoRandomInicio, lapsoRandomFinal, descripcion, adm, nombre);
        }
        
        public System.Data.DataSet FinalizarMuestreo(string idMuestreo, string fechaHoraFinal) {
            return base.Channel.FinalizarMuestreo(idMuestreo, fechaHoraFinal);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FinalizarMuestreoAsync(string idMuestreo, string fechaHoraFinal) {
            return base.Channel.FinalizarMuestreoAsync(idMuestreo, fechaHoraFinal);
        }
        
        public System.Data.DataSet EliminarMuestreo(string idMuestreo) {
            return base.Channel.EliminarMuestreo(idMuestreo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> EliminarMuestreoAsync(string idMuestreo) {
            return base.Channel.EliminarMuestreoAsync(idMuestreo);
        }
        
        public System.Data.DataSet BuscarUltimoMuestreo() {
            return base.Channel.BuscarUltimoMuestreo();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarUltimoMuestreoAsync() {
            return base.Channel.BuscarUltimoMuestreoAsync();
        }
        
        public System.Data.DataSet BuscarIdHoraNoLaboral(string horaInicio, string horaFinal) {
            return base.Channel.BuscarIdHoraNoLaboral(horaInicio, horaFinal);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarIdHoraNoLaboralAsync(string horaInicio, string horaFinal) {
            return base.Channel.BuscarIdHoraNoLaboralAsync(horaInicio, horaFinal);
        }
        
        public System.Data.DataSet AniadirHoraNoLaboral(int IdMuestreo, string horaInicio, string horaFinal) {
            return base.Channel.AniadirHoraNoLaboral(IdMuestreo, horaInicio, horaFinal);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AniadirHoraNoLaboralAsync(int IdMuestreo, string horaInicio, string horaFinal) {
            return base.Channel.AniadirHoraNoLaboralAsync(IdMuestreo, horaInicio, horaFinal);
        }
        
        public System.Data.DataSet ModificarMuestreoPreliminar(string IDMP, string temperatura, string humedad) {
            return base.Channel.ModificarMuestreoPreliminar(IDMP, temperatura, humedad);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ModificarMuestreoPreliminarAsync(string IDMP, string temperatura, string humedad) {
            return base.Channel.ModificarMuestreoPreliminarAsync(IDMP, temperatura, humedad);
        }
        
        public System.Data.DataSet EliminarMuestreoPreliminar(string idMuestreo) {
            return base.Channel.EliminarMuestreoPreliminar(idMuestreo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> EliminarMuestreoPreliminarAsync(string idMuestreo) {
            return base.Channel.EliminarMuestreoPreliminarAsync(idMuestreo);
        }
        
        public System.Data.DataSet BuscarUltimoMuestreoPreliminar() {
            return base.Channel.BuscarUltimoMuestreoPreliminar();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarUltimoMuestreoPreliminarAsync() {
            return base.Channel.BuscarUltimoMuestreoPreliminarAsync();
        }
        
        public System.Data.DataSet ModificarMuestreoPreliminarHoras(string IDMP, string fechahora) {
            return base.Channel.ModificarMuestreoPreliminarHoras(IDMP, fechahora);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ModificarMuestreoPreliminarHorasAsync(string IDMP, string fechahora) {
            return base.Channel.ModificarMuestreoPreliminarHorasAsync(IDMP, fechahora);
        }
    }
}
